image: concourse/concourse
imageTag: "7.10.0"
imagePullPolicy: IfNotPresent
concourse:
  web:
    clusterName: concourse.tobys.cloud

    clientConfig:
      enabled: false
    enableGlobalResources: true
    enableArchivePipeline: false
    enableBuildRerunWhenWorkerDisappears: false
    enableBuildAuditing: false

    enableContainerAuditing: false
    enableJobAuditing: false
    enablePipelineAuditing: false
    enableResourceAuditing: false
    enableSystemAuditing: false
    enableTeamAuditing: false
    enableWorkerAuditing: false
    enableVolumeAuditing: false

    secretRetryAttempts: 5
    secretRetryInterval: 1s
    secretCacheEnabled: true

    secretCacheDuration: 10s
    secretCacheDurationNotFound: 10s

    logLevel: info

    bindIp: 0.0.0.0
    bindPort: 8080

    tls:
      enabled: false
      bindPort: 443

    externalUrl: 'https://concourse.tobys.cloud'

    localAuth:
      enabled: false

    debugBindIp: 127.0.0.1
    debugBindPort: 8079

    interceptIdleTimeout: 0m

    globalResourceCheckTimeout: 1h
    maxChecksPerSecond: 0
    resourceCheckingInterval: 1m
    resourceWithWebhookCheckingInterval: 1m

    containerPlacementStrategy: volume-locality
    baggageclaimResponseHeaderTimeout: 1m

    buildTrackerInterval: 10s

    defaultBuildLogsToRetain: 100
    maxBuildLogsToRetain: 500
    defaultDaysToRetainBuildLogs: 30
    maxDaysToRetainBuildLogs: 30

    postgres:
      host:
      port: 5432
      socket:
      sslmode: disable
      connectTimeout: 5m
      database: atc

    kubernetes:
      enabled: true

      teams:
        - main

      createTeamNamespaces: true
      keepNamespaces: true

    awsSecretsManager:
      enabled: false

    awsSsm:
      enabled: false

    vault:
      enabled: false

    credhub:
      enabled: false

    conjur:
      enabled: false

    tracing: {}

    metrics:
      hostName:
      attribute:
      captureErrorMetrics: false

    datadog:
      enabled: false

    influxdb:
      enabled: false

    emitToLogs: false

    newrelic:
      enabled: false

    prometheus:
      enabled: true
      bindIp: "0.0.0.0"
      bindPort: 9391

      serviceMonitor:
        enabled: false
        interval: "30s"
        namespace:
        metricRelabelings:

    xFrameOptions:

    gc:
      interval: 30s
      oneOffGracePeriod: 5m
      missingGracePeriod: 5m

    syslog:
      enabled: false

    configRBAC: ""

    auth:
      cookieSecure: true
      duration: 24h

      mainTeam:
        config: |
          roles:
            - name: owner
              github:
                users: ["tlwr"]

      github:
        enabled: true

    tsa:
      clientConfig:
        enabled: false

      logLevel: info

      bindIp: 0.0.0.0
      bindPort: 2222

      debugBindIp: 127.0.0.1
      debugBindPort: 2221

      heartbeatInterval: 30s

    letsEncrypt:
      enabled: false

  worker:
    runtime: containerd

    shutdownSignal: SIGUSR2
    connectionDrainTimeout: 1h

    healthcheckBindIp: 0.0.0.0
    healthcheckBindPort: 8888
    healthcheckTimeout: 5s

    debugBindIp: 127.0.0.1
    debugBindPort: 7776

    workDir: /concourse-work-dir

    bindIp: 127.0.0.1
    bindPort: 7777

    sweepInterval: 30s

    logLevel: info

    containerSweeperMaxInFlight: 5
    volumeSweeperMaxInFlight: 5

    tsa:
      hosts: []

    garden: {}
    baggageclaim:
      logLevel: info

      bindIp: 127.0.0.1
      bindPort: 7788

      debugBindIp: 127.0.0.1
      debugBindPort: 7787


      driver: detect

      btrfsBin: btrfs
      mkfsBin: mkfs.btrfs
      overlaysDir:

      reapInterval: 10s

    autoscaling: { }

web:

  enabled: true
  replicas: 1

  args: ["web"]
  sidecarContainers: []
  extraInitContainers: []

  livenessProbe:
    failureThreshold: 5
    initialDelaySeconds: 10
    periodSeconds: 15
    timeoutSeconds: 3
    httpGet:
      path: /api/v1/info
      port: atc

  readinessProbe:
    httpGet:
      path: /api/v1/info
      port: atc

  resources:
    requests:
      cpu: "100m"
      memory: "128Mi"

  env:

  keySecretsPath: "/concourse-keys"
  teamSecretsPath: "/team-authorized-keys"
  authSecretsPath: "/concourse-auth"
  vaultSecretsPath: "/concourse-vault"
  credhubSecretsPath: "/concourse-credhub"
  postgresqlSecretsPath: "/concourse-postgresql"
  syslogSecretsPath: "/concourse-syslog"
  tlsSecretsPath: "/concourse-web-tls"

  additionalVolumes: []
  additionalVolumeMounts:

  additionalAffinities:

  labels: {}
  annotations: {}
  nodeSelector: {}
  tolerations: []
  strategy: {}

  service:
    api:
      type: ClusterIP
      loadBalancerIP:
      labels:
      annotations: {}
      loadBalancerSourceRanges:
      NodePort:
      tlsNodePort:

    workerGateway:
      type: ClusterIP
      loadBalancerIP:
      labels:
      annotations: {}
      loadBalancerSourceRanges:
      NodePort:



    prometheus:
      labels:
      annotations: {}


  ingress:
    enabled: false
    annotations: {}
    hosts:
    tls:

worker:
  enabled: true
  kind: StatefulSet

  cleanUpWorkDirOnStart: true

  replicas: 1

  sidecarContainers: []
  extraInitContainers: []

  minAvailable: 1

  livenessProbe:
    failureThreshold: 5
    initialDelaySeconds: 10
    periodSeconds: 15
    timeoutSeconds: 3
    httpGet:
      path: /
      port: worker-hc

  readinessProbe: {}

  resources:
    requests:
      cpu: "100m"
      memory: "512Mi"

  env: []

  keySecretsPath: "/concourse-keys"

  additionalVolumeMounts: []

  labels: {}
  annotations: {}

  nodeSelector: {}
  additionalAffinities: {}
  additionalVolumes: []
  hardAntiAffinity: false
  hardAntiAffinityLabels: {}
  tolerations: []

  terminationGracePeriodSeconds: 60

  updateStrategy:
    type: RollingUpdate

  podManagementPolicy: Parallel
  emptyDirSize:

persistence:
  enabled: true

  worker:
    accessMode: ReadWriteOnce
    size: 20Gi

postgresql:
  enabled: true
  postgresqlUsername: concourse
  postgresqlPassword: concourse
  postgresqlDatabase: concourse

  persistence:
    enabled: true

    accessModes:
      - ReadWriteOnce

    size: 8Gi

rbac:
  create: true
  apiVersion: v1

podSecurityPolicy:
  create: false

  allowedWorkerVolumes:
  - 'secret'
  - 'persistentVolumeClaim'
  - 'configMap'
  - 'downwardAPI'
  - 'emptyDir'
  - 'projected'

  allowedWebVolumes:
  - 'secret'
  - 'persistentVolumeClaim'
  - 'configMap'
  - 'downwardAPI'
  - 'emptyDir'
  - 'projected'

secrets:
  create: false
