# helm repo add enix https://charts.enix.io
# helm install x509-certificate-exporter enix/x509-certificate-exporter -f <(cat <<EOF
# secretsExporter:
#   podAnnotations:
#     prometheus.io/port: "9793"
#     prometheus.io/scrape: "true"
# service:
#   create: false
# prometheusServiceMonitor:
#   create: false
# prometheusRules:
#   create: false
# EOF
# )
# helm template x509-certificate-exporter enix/x509-certificate-exporter -f values.yaml  > x509-exporter.yaml

---
# Source: x509-certificate-exporter/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: x509-certificate-exporter
  namespace: default
  labels:
    helm.sh/chart: x509-certificate-exporter-3.11.0
    app.kubernetes.io/name: x509-certificate-exporter
    app.kubernetes.io/instance: x509-certificate-exporter
    app.kubernetes.io/version: "3.11.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: x509-certificate-exporter/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: x509-certificate-exporter
  labels:
    helm.sh/chart: x509-certificate-exporter-3.11.0
    app.kubernetes.io/name: x509-certificate-exporter
    app.kubernetes.io/instance: x509-certificate-exporter
    app.kubernetes.io/version: "3.11.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - watch
  - list
---
# Source: x509-certificate-exporter/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: x509-certificate-exporter
  labels:
    helm.sh/chart: x509-certificate-exporter-3.11.0
    app.kubernetes.io/name: x509-certificate-exporter
    app.kubernetes.io/instance: x509-certificate-exporter
    app.kubernetes.io/version: "3.11.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: x509-certificate-exporter
subjects:
- kind: ServiceAccount
  name: x509-certificate-exporter
  namespace: default
---
# Source: x509-certificate-exporter/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: x509-certificate-exporter
  namespace: default
  labels:
    helm.sh/chart: x509-certificate-exporter-3.11.0
    app.kubernetes.io/name: x509-certificate-exporter
    app.kubernetes.io/instance: x509-certificate-exporter
    app.kubernetes.io/version: "3.11.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: x509-certificate-exporter
      app.kubernetes.io/instance: x509-certificate-exporter
  replicas: 1
  template:
    metadata:
      labels:
        helm.sh/chart: x509-certificate-exporter-3.11.0
        app.kubernetes.io/name: x509-certificate-exporter
        app.kubernetes.io/instance: x509-certificate-exporter
        app.kubernetes.io/version: "3.11.0"
        app.kubernetes.io/managed-by: Helm
      annotations:
        prometheus.io/port: "9793"
        prometheus.io/scrape: "true"
    spec:
      restartPolicy: Always
      serviceAccountName: x509-certificate-exporter
      containers:
      - name: x509-certificate-exporter
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 65534
          runAsUser: 65534
        resources:
          limits:
            cpu: 200m
            memory: 150Mi
          requests:
            cpu: 20m
            memory: 20Mi
        image: docker.io/enix/x509-certificate-exporter:3.11.0
        imagePullPolicy: IfNotPresent
        args:
        - --watch-kube-secrets
        - --secret-type=kubernetes.io/tls:tls.crt
        - --max-cache-duration=300s
        - --listen-address=:9793
        ports:
        - name: metrics
          containerPort: 9793
